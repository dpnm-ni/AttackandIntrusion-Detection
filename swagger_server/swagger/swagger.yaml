---
swagger: "2.0"
info:
  description: "NI VNF Intrusion Detection Module for the NI Project."
  version: "1.0.0"
  title: "NI Intrusion Detection Module"
tags:
- name: "ni_intrusion_detection_module"
  description: "Detecting VNFs' overload and SLA violation states using ML algorithms."
schemes:
- "http"
paths:
  /get_vnf_info/{prefix}:
    get:
      tags:
      - "VNF Intrusion Detection"
      summary: "Get VNFs' basic information that configure SFC"
      operationId: "get_vnf_info"
      produces:
      - "application/json"
      parameters:
      - name: "prefix"
        in: "path"
        description: "vnf instance name prefix"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VNFInstance"
      x-swagger-router-controller: "swagger_server.controllers.vnf_intrusion_detection_controller"
  /get_vnf_resource_usage/{prefix}:
    get:
      tags:
      - "VNF Intrusion Detection"
      summary: "Get VNFs' Resource Usages in Real-Time"
      operationId: "get_vnf_resource_usage"
      produces:
      - "application/json"
      parameters:
        - name: "prefix"
          in: "path"
          description: "VNF instance name prefix"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.vnf_intrusion_detection_controller"
#  /get_resource_overload_detection_result/{prefix}:
#    get:
#      tags:
#      - "VNF Intrusion Detection"
#      summary: "Get VNF Intrusion Detection Model's Prediction Results - Resource Overload"
#      operationId: "get_resource_overload_detection_result"
#      produces:
#      - "application/json"
#      parameters:
#        - name: "prefix"
#          in: "path"
#          description: "VNF instance name prefix"
#          required: true
#          type: "string"
#      responses:
#        "200":
#          description: "OK"
#          schema:
#            type: "string"
#      x-swagger-router-controller: "swagger_server.controllers.vnf_intrusion_detection_controller"

  /get_intrusion_detection_result/{prefix}:
    get:
      tags:
      - "VNF Intrusion Detection"
      summary: "Get VNF Intrusion Detection Model's Prediction Results"
      operationId: "get_intrusion_detection_result"
      produces:
      - "application/json"
      parameters:
        - name: "prefix"
          in: "path"
          description: "VNF instance name prefix"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.vnf_intrusion_detection_controller"
  /get_intrusion_detection_F1_score/:
    get:
      tags:
      - "VNF Intrusion Detection"
      summary: "Get VNF Intrusion Detection Model's F1 score"
      operationId: "get_intrusion_detection_f1_score"
      produces:
      - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: "string"
      x-swagger-router-controller: "swagger_server.controllers.vnf_intrusion_detection_controller"

definitions:
  NetworkPort:
    type: "object"
    properties:
      port_id:
        type: "string"
      port_name:
        type: "string"
      network_id:
        type: "string"
      ip_addresses:
        type: "array"
        items:
          type: "string"
    example:
      port_name: "port_name"
      network_id: "network_id"
      ip_addresses:
      - "ip_addresses"
      - "ip_addresses"
      port_id: "port_id"
  VNFInstance:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
        description: "state of VNF VM. (ACTIVE, SHUTOFF, ERROR, etc.)"
      flavor_id:
        type: "string"
      node_id:
        type: "string"
      ports:
        type: "array"
        items:
          $ref: "#/definitions/NetworkPort"
    example:
      flavor_id: "flavor_id"
      name: "name"
      id: "id"
      ports:
      - port_name: "port_name"
        network_id: "network_id"
        ip_addresses:
        - "ip_addresses"
        - "ip_addresses"
        port_id: "port_id"
      - port_name: "port_name"
        network_id: "network_id"
        ip_addresses:
        - "ip_addresses"
        - "ip_addresses"
        port_id: "port_id"
      status: "status"
      node_id: "node_id"
  idInfo:
    type: "object"
    properties:
      vnf_prefix:
        type: "string"
externalDocs:
  description: "Find out more about DPNM NI."
  url: "http://dpnm.postech.ac.kr/"
